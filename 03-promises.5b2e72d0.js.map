{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAGjC,IAAII,EAAQ,EACRC,EAAO,EACPC,EAAS,EACTC,EAAW,EAiCf,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUR,MAAAS,IAEpBG,EAAO,CAAEK,SAAAT,EAAUR,MAAAS,MAEpBA,MAzCPb,EAAKC,KAAKqB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEFjB,EAAQkB,OAAOzB,EAAKI,MAAMsB,OAC1BlB,EAAOiB,OAAOzB,EAAKK,KAAKqB,OACxBjB,EAASgB,OAAOzB,EAAKM,OAAOoB,OAE5B,IAAK,IAAIC,EAAI,EAAGA,EAAIlB,EAAQkB,GAAK,EAC/BpB,GAASC,EACTE,GAAY,EAEZC,EAAcD,EAAUH,GACrBqB,MAAK,EAAGP,SAAAQ,EAAUzB,MAAA0B,MACjBC,EAAAjC,GAASkC,OAAOC,QACd,uBAAqBJ,QAAiBC,OAExCI,QAAQC,IAAI,uBAAqBN,QAAiBC,UAEnDM,OAAM,EAAGf,SAAAgB,EAAUjC,MAAAkC,MAClBP,EAAAjC,GAASkC,OAAOO,QACd,sBAAoBF,QAAiBC,OAEvCJ,QAAQC,IAAI,sBAAoBE,QAAeC,UAGnDf,EAAEiB,OAAOC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\nlet position = 0;\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  delay = Number(refs.delay.value);\n  step = Number(refs.step.value);\n  amount = Number(refs.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    delay += step;\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    e.target.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position3","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","addEventListener","e","preventDefault","Number","value","i","then","position1","delay1","$parcel$interopDefault","Notify","success","console","log","catch","position2","delay2","failure","target","reset"],"version":3,"file":"03-promises.5b2e72d0.js.map"}