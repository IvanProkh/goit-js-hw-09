{"mappings":"iiBAWA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,OAAQL,SAASC,cAAc,oBAG7BK,EAAQ,EACRC,EAAO,EACPC,EAAS,EACTC,EAAW,EAEfX,EAAKC,KAAKW,iBAAiB,UAS3B,SAAsBC,GACpBA,EAAEC,iBACFN,EAAQO,OAAOf,EAAKI,MAAMY,OAEZP,EAAPM,OAAOf,EAAKK,KAAKW,OACxBN,EAASK,OAAOf,EAAKM,OAAOU,OAE5B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQO,GAAK,EAG/BC,EAAcP,EAAUH,GACrBW,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAUC,EAAKH,EAALhB,MACjBoB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAfN,EAAS,QAAYM,OAANJ,EAAM,OAEhDK,QAAQC,IAAI,uBAAwCF,OAAfN,EAAS,QAAYM,OAANJ,EAAM,UAE3DO,OAAM,SAAAV,G,IAAGW,EAAQX,EAARE,SAAUU,EAAKZ,EAALhB,MAClBoB,EAAA1B,GAAS2B,OAAOQ,QACd,sBAAuCN,OAAfI,EAAS,QAAYJ,OAANK,EAAM,OAE/CJ,QAAQC,IAAI,sBAAuCF,OAAfI,EAAS,QAAYJ,OAANK,EAAM,UAG7DxB,GAASC,EACTE,GAAY,KAgBhB,IAAMO,EAAgB,SAACgB,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEf,SAAAY,EAAU9B,MAAA+B,IAEpBG,EAAO,CAAEhB,SAAAY,EAAU9B,MAAA+B,MAEpBA,O","sources":["src/js/03-promises.js"],"sourcesContent":["// *В HTML есть разметка формы, в поля которой пользователь будет вводить первую задержку в миллисекундах, шаг\n// *увеличения задержки для каждого промиса после первого и количество промисов которое необходимо создать.\n\n// *Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз, сколько ввели\n// *в поле amount.При каждом вызове передай ей номер создаваемого промиса(position) и задержку учитывая введенную\n// *пользователем первую задержку(delay) и шаг(step).\n\n// *Дополни код функции createPromise так, чтобы она возвращала один промис, который выполянется или отклоняется через\n// *delay времени.Значением промиса должен быть объект, в котором будут свойства position и delay со значениями одноименных\n// *параметров.Используй начальный код функции для выбора того, что нужно сделать с промисом - выполнить или отклонить.\n\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submit: document.querySelector('[type=\"submit\"]'),\n};\n\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\nlet position = 1;\n\nrefs.form.addEventListener('submit', onFormSubmit);\n// refs.submit.addEventListener('click', onFormSubmit);\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     resolve('success');\n//   }, delay);\n// });\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  delay = Number(refs.delay.value);\n  // console.log('НАЧАЛЬНОЕ ВРЕМЯ', delay);\n  step = Number(refs.step.value);\n  amount = Number(refs.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    // createPromise(position, delay);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n    position += 1;\n\n    // console.log('ПОЗИЦИЯ', position);\n    // console.log('ВРЕМЯ', delay);\n  }\n}\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     resolve Promise(position, delay);\n//   } else {\n//     reject Promise(position, delay);\n//   }\n// }\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","submit","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$position","addEventListener","e","preventDefault","Number","value","i","$ce04d3a99e08e73b$var$createPromise","then","param","position1","position","delay1","$parcel$interopDefault","Notify","success","concat","console","log","catch","position2","delay2","failure","position3","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.c389a96b.js.map"}